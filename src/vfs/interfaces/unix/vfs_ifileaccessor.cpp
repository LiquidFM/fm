/**
 * This file is part of QFM.
 *
 * Copyright (C) 2011-2012 Dmitriy Vilkov, <dav.daemon@gmail.com>
 *
 * QFM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QFM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QFM. If not, see <http://www.gnu.org/licenses/>.
 */
#include "../vfs_ifileaccessor.h"

#include <fcntl.h>


#define UNDEFINED 0


VFS_NS_BEGIN

IFileAccessor::~IFileAccessor()
{}

const int IFileAccessor::open_flags[] =
{
		UNDEFINED,         O_RDONLY,  O_RDWR,    UNDEFINED,
		O_APPEND | O_EXCL, UNDEFINED, UNDEFINED, UNDEFINED,
		O_CREAT,           UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,         UNDEFINED, UNDEFINED, UNDEFINED,
		O_TRUNC
};

const int IFileAccessor::permissions_flags[] =
{
		UNDEFINED, S_IRUSR,   S_IWUSR,   UNDEFINED, S_IXUSR,   UNDEFINED, UNDEFINED, UNDEFINED,
		S_IRGRP,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IWGRP,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IXGRP,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IROTH,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IWOTH,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IXOTH
};

const int IFileAccessor::flags_permissions[] =
{
		UNDEFINED,                 IFileAccessor::OthersExec, IFileAccessor::OthersWrite, UNDEFINED, IFileAccessor::OthersRead, UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::GroupExec,  UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::GroupWrite, UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::GroupRead,  UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::UserExec,   UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::UserWrite,  UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::UserRead
};

const int IFileAccessor::seek_flags[] =
{
		SEEK_SET,
		SEEK_CUR,
		SEEK_END
};

VFS_NS_END
