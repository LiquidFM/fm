#include "../filesystemifileaccessor.h"

#include <fcntl.h>


#define UNDEFINED 0


FILE_SYSTEM_NS_BEGIN

IFileAccessor::~IFileAccessor()
{}

const int IFileAccessor::open_flags[] =
{
		UNDEFINED,         O_RDONLY,  O_RDWR,    UNDEFINED,
		O_APPEND | O_EXCL, UNDEFINED, UNDEFINED, UNDEFINED,
		O_CREAT,           UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,         UNDEFINED, UNDEFINED, UNDEFINED,
		O_TRUNC
};

const int IFileAccessor::permissions_flags[] =
{
		UNDEFINED, S_IRUSR,   S_IWUSR,   UNDEFINED, S_IXUSR,   UNDEFINED, UNDEFINED, UNDEFINED,
		S_IRGRP,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IWGRP,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IXGRP,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IROTH,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IWOTH,   UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,
		S_IXOTH
};

const int IFileAccessor::flags_permissions[] =
{
		UNDEFINED,                 IFileAccessor::OthersExec, IFileAccessor::OthersWrite, UNDEFINED, IFileAccessor::OthersRead, UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::GroupExec,  UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::GroupWrite, UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::GroupRead,  UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::UserExec,   UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::UserWrite,  UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		UNDEFINED,                 UNDEFINED,                 UNDEFINED,                  UNDEFINED, UNDEFINED,                 UNDEFINED, UNDEFINED, UNDEFINED,
		IFileAccessor::UserRead
};

const int IFileAccessor::seek_flags[] =
{
		SEEK_SET,
		SEEK_CUR,
		SEEK_END
};

FILE_SYSTEM_NS_END
